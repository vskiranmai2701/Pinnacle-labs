import numpy as np
import pandas as pd
dataset = pd.read_csv('/content/customer_feedback_sentiment_analysis.csv')
dataset
dataset.shape
dataset.head()
import re
import nltk

nltk.download('stopwords')

from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()

all_stopwords = stopwords.words('english')
all_stopwords.remove('not')
print(dataset.columns)
print(dataset.head())
review = re.sub('[^a-zA-Z]', ' ', dataset['sentiment'][i])
review = re.sub('[^a-zA-Z]', ' ', dataset['customer_feedback'][i])
dataset.columns = dataset.columns.str.strip()
print(dataset.index)
corpus = []

column_name = 'sentiment'  # Change if necessary

if column_name not in dataset.columns:
    raise KeyError(f"Column '{column_name}' not found in DataFrame")

for i in range(0, min(900, len(dataset))):
    sentiment = dataset[column_name][i]
    
    # Preprocessing
    review = re.sub('[^a-zA-Z]', ' ', sentiment)  # Change 'review' to 'sentiment'
    review = review.lower()
    review = review.split()
    review = [ps.stem(word) for word in review if word not in set(all_stopwords)]
    review = ' '.join(review)
    corpus.append(review)
corpus
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features = 1420)
X = cv.fit_transform(corpus).toarray()
y = dataset.iloc[:, -1].values
import pickle
bow_path = 'c1_BoW_Sentiment_Model.pkl'
pickle.dump(cv, open(bow_path, "wb"))
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)
from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(X_train, y_train)
import joblib
joblib.dump(classifier, 'c2_Classifier_Sentiment_Model') 
y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)

accuracy_score(y_test, y_pred)
